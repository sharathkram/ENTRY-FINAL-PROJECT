import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
df = pd.read_csv(r"C:\Users\shara\Music\DATA SET\AI usage data set.csv")

# 1. Initial Overview

print("Dataset Shape:", df.shape)
print("\nData Types:\n", df.dtypes)
print("\nFirst 5 Rows:\n", df.head())
print("\nMissing Values:\n", df.isnull().sum())
print("\nSummary Statistics:\n", df.describe())

# 2. Data Cleaning

df = df.drop_duplicates()
df['Daily_Usage_Hours'] = pd.to_numeric(df['Daily_Usage_Hours'], errors='coerce')
df = df.dropna(subset=['Daily_Usage_Hours'])

# Fill missing values
if 'Preferred_AI_Tool' in df.columns:
    df['Preferred_AI_Tool'] = df['Preferred_AI_Tool'].fillna('Unknown')

# 3. Univariate Analysis

plt.figure(figsize=(6, 4))
sns.histplot(df['Daily_Usage_Hours'], bins=10, kde=True, color='skyblue')
plt.title("Distribution of Daily_Usage_Hours")
plt.xlabel("Hours")
plt.ylabel("Frequency")
plt.show()
print("This histogram displays how many students fall into different ranges of daily AI tool usage hours")

# 4. Bivariate Analysis
if 'Stream' in df.columns:
    plt.figure(figsize=(10, 5))
    sns.boxplot(x='Stream', y='Daily_Usage_Hours', data=df)
    plt.xticks(rotation=45)
    plt.title("Daily_Usage_Hours")
    plt.show()
    print("A boxplot comparing AI tool usage across different academic streams")

if 'Year_of_Study' in df.columns:
    usage_by_year = df.groupby('Year_of_Study')['Daily_Usage_Hours'].mean()
    usage_by_year.plot(kind='bar', color='salmon')
    plt.title("Average Daily Usage by Year_of_Study")
    plt.ylabel("Hours")
    plt.xticks(rotation=0)
    plt.show()
    print("A bar chart showing the average daily AI tool usage for students in each academic year")

# 5. Multivariate Analysis

if 'Stream' in df.columns and 'Year_of_Study' in df.columns:
    pivot = df.pivot_table(values='Daily_Usage_Hours', index='Stream', columns='Year_of_Study', aggfunc='mean')
    print("\nPivot Table - Avg Usage:\n", pivot)
    
print("pivot table summarizing the average daily usage of AI tools by both stream and year of study.")

# Correlation
corr = df.corr(numeric_only=True)
plt.figure(figsize=(5, 4))
sns.heatmap(corr, annot=True, cmap='YlGnBu', fmt=".2f")
plt.title("Correlation Heatmap")
plt.show()
print("A heatmap of correlations between numeric variables in the dataset")

# Preferred AI Tool
if 'Preferred_AI_Tool' in df.columns:
    plt.figure(figsize=(8,5))
    sns.countplot(data=df, x='Preferred_AI_Tool',
                  order=df['Preferred_AI_Tool'].value_counts().index,
                  palette='Set2')
    plt.xticks(rotation=45)
    plt.title("Most Preferred AI Tools")
    plt.xlabel("AI Tool")
    plt.ylabel("Number of Students")
    plt.show()
    print("This bar chart displays which AI tools students prefer the most. "
          "It indicates adoption trends and tool popularity.")

# Year vs Tool - Grouped Bar
if 'Year_of_Study' in df.columns and 'Preferred_AI_Tool' in df.columns:
    plt.figure(figsize=(10,6))
    sns.countplot(data=df, x='Year_of_Study', hue='Preferred_AI_Tool', palette='Set3')
    plt.title("AI Tool Preference by Year of Study")
    plt.xlabel("Year of Study")
    plt.ylabel("Count")
    plt.legend(title="AI Tool", bbox_to_anchor=(1.05, 1))
    plt.show()
    print("This grouped bar chart compares AI tool preferences across different years. "
          "It highlights whether certain tools are more common in early or later years.")

# High vs Low Usage - Donut Chart
df['High Usage'] = df['Daily_Usage_Hours'] > 3
usage_counts = df['High Usage'].value_counts()
plt.figure(figsize=(6,6))
plt.pie(usage_counts, labels=["Low (≤3 hrs)", "High (>3 hrs)"], autopct='%1.1f%%',
        startangle=90, colors=["#66b3ff","#ff9999"], wedgeprops=dict(width=0.4))
plt.title("Proportion of High vs Low Usage Students")
plt.show()
print("This donut chart illustrates the proportion of students who are high AI users "
      "(>3 hours daily) versus low users (≤3 hours).")

# 6. Derived Insights

df['High Usage'] = df['Daily_Usage_Hours'] > 3
print("\nHigh Usage Students (>3 hrs/day):", df['High Usage'].sum())

if 'Device Used' in df.columns:
    print("\nAverage Usage by Device:")
    print(df.groupby('Device Used')['Daily_Usage_Hours'].mean())

if 'Preferred_AI_Tool' in df.columns:
    print("\nTop 3 AI Tools:")
    print(df['Preferred_AI_Tool'].value_counts().head(3))

# 7. Summary 

# - Most students use AI tools for 1–3 hours daily.
# - Tools like ChatGPT, Grammarly are among the most preferred.
# - Streams like CS/IT show higher average usage than others.
# - Year-wise usage indicates tech adoption increases in later years.
# - Device preference impacts usage — laptops show higher average hours.
# - Recommendation: AI tool workshops can be tailored by stream/year.

print (df)
